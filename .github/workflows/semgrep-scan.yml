name: Semgrep Security Scan

# 'workflow_call' permite que este workflow seja chamado por outros.
on:
  workflow_call:
    inputs:
      semgrep-rules:
        description: 'An√°lise est√°tica de c√≥digo com Semgrep'
        required: false
        type: string
        default: 'p/ci'
      fail-on-findings:
        description: 'Falhar a pipeline'
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  semgrep:
    name: semgrep-oss/scan
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Timeout para evitar travamentos
    
    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')
    
    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: semgrep/semgrep
    
    steps:
      # Fetch project source with GitHub Actions Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Para an√°lise completa do hist√≥rico

      # Run the "semgrep scan" command on the command line of the docker image
      - name: Run Semgrep scan
        id: semgrep
        run: |
          semgrep scan \
            --sarif \
            --sarif-output semgrep.sarif \
            --exclude 'node_modules/**,dist/**,build/**,*.min.js,*.bundle.js' \
            --severity ERROR \
            --baseline-commit ${{ github.event.before || 'HEAD~1' }} \
            --timeout 1800 \
            --max-memory 4096


      - name: Upload SARIF results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif
          category: semgrep-${{ github.event_name }}-${{ github.sha }}
        if: always()

      - name: Upload SARIF as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-results
          path: semgrep.sarif
          retention-days: 30
        if: always()

      - name: Fail on Critical Findings (Optional)
        if: inputs.fail-on-findings == 'true'
        run: |
          if [ -f "semgrep.sarif" ]; then
            TOTAL_FINDINGS=$(jq -r '.runs[0].results | length' semgrep.sarif 2>/dev/null || echo "0")
            if [ "$TOTAL_FINDINGS" -gt 0 ]; then
              echo "‚ùå Security findings detected! Pipeline will fail."
              echo "Found $TOTAL_FINDINGS total security issues."
              echo "Check the uploaded SARIF file for details."
              exit 1
            fi
          fi

      - name: Success Message
        run: |
          echo "‚úÖ Semgrep scan completed successfully!"
          echo "üìÅ SARIF results uploaded as artifact: semgrep-results" 